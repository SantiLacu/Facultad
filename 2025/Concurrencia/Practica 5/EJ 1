--Se requiere modelar un puente de un solo sentido, el puente solo soporta el peso de 5 unidades de peso.
--Cada auto pesa 1 unidad, cada camioneta pesa 2 unidades y cada camión 3 unidades. Suponga que hay una 
--cantidad innumerable de vehículos (A autos, B camionetas y C camiones). a. Realice la solución 
--suponiendo que todos los vehículos tienen la misma prioridad. b. Modifique la solución para que tengan 
--mayor prioridad los camiones que el resto de los vehículos
procedure puente is

task Coordinador is
   entry pasoAuto();
   entry pasoCamioneta();
   entry pasoCamion();
   entry liberarPaso();
end Coordinador;

task type auto is
   entry identAuto(tipo: Integer);
end auto;

task type camion is
   entry identCamion(tipo: Integer);
end camion;

task type camioneta is
   entry identCamioneta(tipo: Integer);
end camioneta;

arrAuto: array(1..A) of auto;
arrAuto: array(1..B) of camioneta;
arrAuto: array(1..C) of camion;


task body Coordinador is
   pesoTotal:Integer;
   pesoTipo: array(1..3) of Integer;
begin
   pesoTotal:=5;
   pesoTipo(1):=1;
   pesoTipo(2):=2;
   pesoTipo(3):=3;
   loop
      select
         when((liberarPaso'Count=0)and(pesoTotal>=1))=> accept pasoAuto() do
            pesoTotal:=pesoTotal-1;
         end pasoAuto;
      or
         when((liberarPaso'Count=0)and(pesoTotal>=2))=> accept pasoCamioneta () do 
            pesoTotal:=pesoTotal-2;
      or
         when((liberarPaso'Count=0)and(pesoTotal>=3))=> accept pasoCamion () do
            pesoTotal:=pesoTotal-3;
      or
         accept liberarPaso(tipo:Integer) do -- Hay prioridad para liberar el paso
            pesoTotal:=pesoTotal+pesoTipo(tipo);
      end select;
   end loop;
end Coordinador;

task body auto is
   t: Integer;
begin
   accept identAuto(tipo:Integer) do
      t:=tipo;
   end identAuto;
   Coordinador.pasoAuto();
   --Pasa por el puente
   Coordinador.liberarPaso(t);
end auto;

task body auto is
   t: Integer;
begin
   accept identCamioneta(tipo:Integer) do
      t:=tipo;
   end identCamioneta;
   Coordinador.pasoCamioneta();
   --Pasa por el puente
   Coordinador.liberarPaso(t);
end camioneta;

task body camion is
   t: Integer;
begin
   accept identCamion(tipo:Integer) do
      t:=tipo;
   end identCamion;
   Coordinador.pasoCamion();
   --Pasa por el puente
   Coordinador.liberarPaso(t);
end camion;
begin
   for J in 1..A loop
      auto.identAuto(j);
   end loop;
   for J in 1..B loop
      auto.identCamioneta(j);
   end loop;
   for J in 1..C loop
      auto.identCamion(j);
   end loop;
   --Para dar prioridad a los camiones agregar en el when del accept del auto y camioneta que el contador de accept del camion sea 0
end puente;