//Simular la atención en un locutorio con 10 cabinas telefónicas, que tiene un empleado que se encarga de atender a los 
//clientes. Hay N clientes que al llegar esperan hasta que el empleado les indica a que cabina ir, la usan y luego se 
//dirigen al empleado para pagarle. El empleado atiende a los clientes en el orden en que hacen los pedidos, pero siempre
//dando prioridad a los que terminaron de usar la cabina. Nota: maximizar la concurrencia; suponga que hay una 
//función Cobrar() llamada por el empleado que simula que el empleado le cobra al cliente. 

chan cola(int);
chan resp(int);
chan pagar(float);
process Cliente [id:0..N-1]{
    int cabina;
    float pago;
    send cola(id);
    receive resp[id](cabina);
    pago=UsarCabina(cabina);
    send pagar(pago);
}

process Empleado{
    int cabina,cliente; 
    float pago;
    while (1)
    {
        receive cola(cliente);
        cabina=CabinaLibre();
        send resp[cliente](cabina);
        if (!empty(pagar))
        {
            receive pagar(pago);
            registrar(pago);
        }
    }
    
}
