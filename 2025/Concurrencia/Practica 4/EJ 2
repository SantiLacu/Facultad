 //Se desea modelar el funcionamiento de un banco en el cual existen 5 cajas para realizar pagos.
 //Existen P personas que desean pagar. Para esto cada una selecciona la caja donde hay menos 
 //personas esperando, una vez seleccionada espera a ser atendido.
 //NOTA: maximizando la concurrencia. 
 
 chan Fila[5](float);
 chan respuesta[5]();
 chan llegue();
 chan liberoCaja(int);
 process Persona[id:0..P-1]{
     int id_caja;
     float dinero;
     send llegue();
     receive cajaLibre(id_caja)
     send Fila[id_caja](dinero);  
     receive respuesta[id_caja]();
     send liberoCaja(id_caja);
 }
 process Caja[id:0..4]{
    float dinero;
    while (1)
    {
        receive Fila[id](dinero);
        send respuesta[id]();

    }
 }

 process Admin {
    int contador [5]={[5]0};
    int pos=0,libero;
    while (1)
    {   
        if(!empty(llegue())){
            receive llegue()
            contador[pos]++;
            pos=(pos+1) % 5;
            send cajaLibre(pos);
        }                               //Busy waiting
        if(!empty(liberoCaja()){
            receive liberoCaja(libero);
            contador[libero]--;
        } 
    }
    
    
 }